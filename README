【プログラム】ポケット ラズディエーション カウンター

【種別】放射線量測計測ソフトウエア

【開発目的】
  Raspberry Piに接続されたポケガからの信号を受け取り集計結果をコンソールまたはファイルへ
  出力することで放射線量を可視化します。

【製作者ホームページ】
  http://www.orsx.net/blog/

【動作環境】
  マザーボード: Raspberry Pi
  ガイガーカウンター: 組込版ポケットガイガーType5
  オペレーティングシステム: Raspbian “wheezy”

【注意事項】
  ・このプログラムを使用した測定データの精度について保証いたしておりません。
    このソフトウエアを使用し発生したいかなるトラブルも当方は責任を負いかねます。
  ・組込版ポケットガイガーType5とRaspberry Piを接続するときは10kオームから22kオームで
    プルアップする必要があります。詳しくはポケットガイガー公式サイトを御覧ください。

【依存関係】
  ライブラリに"wiringPi"を使用します。インストールしておいてください。
  入手先: https://projects.drogon.net/raspberry-pi/wiringpi/

【ハードウエアの準備】
  組込版ポケットガイガーType5をプルアップしRaspberry PiのGPIOへ接続し起動させてください。
  この時に接続したピンの番号ではなくGPIOの番号を覚えておいてください。

  下記より、信号ピンがGPIO 30、ノイズがGPIO 31であると仮定して解説します。
  GPIO 30、GPIO 31はP5のところにあります。これを使用するにはピンヘッダーをハンダ付けする必要があります。

【インストール方法】
  ライブラリに"wiringPi"を使用します。インストールしておいてください。
  インストール方法は"依存関係"の入手先を御覧ください。

  依存関係をインストールしましたら下記のコマンドを実行し当ソフトウエアをインストールします。
  $ cd Pocket_Rasdiation_Counter
  $ make
  $ sudo make install 

【実行方法】
  動作確認は次のパラメータを指定したコマンドで行えます。
  $ rasdiation --sign_pin 30 --nois_pin 31 --mode --beep

【オプション一覧】
  オプションは下記の通りとなっております。
   --sign_pin  -s   [int]
     信号ピンのGPIO番号を整数型で指定します。

   --nois_pin  -n   [int]
     ノイズピンのGPIO番号を整数型で指定します。

   --output    -o   [string]
     標準出力せずにファイル出力を行うためのパスを指定します。
     ない場合はテキストファイルを自作します。

   --existence -e   [none]
     ファイル出力時に算出結果をコンソールにも標準出力したい場合に指定します。
     ファイル出力オプションを設定せずこのオプションを指定しても意味はありません。

   --mode      -m   [none]
     プログラムの細かい挙動を見たい時に指定します。
     うまく動作しない時に使用します。

   --beep      -b   [none]
   リアルタイムで放射線を検知したことをコンソールに出力しビーブ音を鳴らします。

【他のプログラムとの連携する場合】
  ファイルや名前付きパイプを使用することにより他のプログラムとの連携する事が可能です。

  今回は、名前付きパイプを使用した方法を解説します。

  名前付きパイプを作成します。
  $ mkfifo /tmp/rasdiation_fifo
  名前付きパイプへ出力するようにオプションを指定し実行します。 
  $ rasdiation --sign_pin 30 --nois_pin 31 -o /tmp/rasdiation_fifo

  外部プログラムで名前付きパイプへアクセスすることによりリアルタイムの線量を得る事ができます。
  $ cat /tmp/rasdiation_fifo
  UnixTime,1363680524,CPM,3.550000,uSv/h,0.066941,uSv/h_Tolerance,0.007944
  $

【データフォーマット】
  CSV形式で出力され、各種データは次の通りです。
   UnixTime        ・・・・ UNIXタイム
   CPM             ・・・・ 一般的な放射線量測定に使われる単位"CPM"
   uSv/h           ・・・・ 一般的な放射線量測定に使われる単位"uSv/h"
   uSv/h_Error     ・・・・ 上記単位"uSv/h"の誤差範囲

【開発者の連絡先】
  何かありましたら上記にある"製作者ホームページ"よりご連絡ください。

